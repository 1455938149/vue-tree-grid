{"version":3,"sources":["webpack:///static/js/app.1d692a180a7283ddb36d.js","webpack:///./src/main.js","webpack:///./src/App.vue?4bca","webpack:///./src/components/TreeGrid.vue?b9b3","webpack:///./src/App.vue","webpack:///./src/components/TreeGrid.vue","webpack:///App.vue","webpack:///TreeGrid.vue"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_iview","_iview2","use","el","components","App","__vue_script__","__vue_template__","__vue_styles__","__vue_options__","options","template","computed","Object","keys","forEach","key","defineProperty","value","_TreeGrid","_TreeGrid2","data","columns","type","title","sortable","actions","text","id","code","name","status","remark","children","TreeGrid","methods","rowClick","index","event","console","log","selectionClick","arr","sortClick","_assign","_assign2","props","Array","items","initItems","cloneColumns","checkGroup","checks","watch","this","initData","handler","makeColumns","deep","ready","handleSort","col","_sortType","$emit","RowClick","deepCopy","column","_index","_width","width","level","parent","_this","spaceHtml","i","item","expanded","show","isShow","load","push","toggle","_this2","close","open","child","childIndex","splice","_this3","_this4","handleCheckAll","concat","All","checkAllGroupChange","length","_this5","renderHeader","$index","renderBody","row","o","ni","t","toString","prototype","map","[object Boolean]","[object Number]","[object String]","[object Function]","[object Array]","[object Date]","[object RegExp]","[object Undefined]","[object Null]","[object Object]","call"],"mappings":"AAAAA,cAAc,EAAE,IAEV,SAAUC,EAAQC,EAASC,GAEhC,YAgBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GCpBxF,GAAAG,GAAAL,EAAA,GDQKM,EAAQL,EAAuBI,GCPpCE,EAAAP,EAAA,IDWKQ,EAAQP,EAAuBM,GCVpCE,EAAAT,EAAA,IDcKU,EAAUT,EAAuBQ,ECbtCT,GAAA,IAEAM,EAAAF,QAAIO,IAAJD,EAAAN,SAEA,GAAAE,GAAAF,SACIQ,GAAI,OACJC,YAAcC,kBDqBX,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACC,CAEF,SAAUhB,EAAQC,KAMlB,SAAUD,EAAQC,KAMlB,SAAUD,EAAQC,KAKhB,CAEF,SAAUD,EAAQC,GE5DxBD,EAAAC,QAAA,mKFkEM,SAAUD,EAAQC,GGlExBD,EAAAC,QAAA,u8CHwEM,SAAUD,EAAQC,EAASC,GIxEjC,GAAAe,GAAAC,EACAC,IACAjB,GAAA,IACAe,EAAAf,EAAA,IACAgB,EAAAhB,EAAA,IACAF,EAAAC,QAAAgB,MACAjB,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAK,QACA,IAAAc,GAAA,kBAAApB,GAAAC,QAAAD,EAAAC,QAAAoB,UAAArB,EAAAC,QAAAoB,YAAoHrB,EAAAC,OACpHiB,KACAE,EAAAE,SAAAJ,GAEAE,EAAAG,WAAAH,EAAAG,aACAC,OAAAC,KAAAN,GAAAO,QAAA,SAAAC,GACA,GAAA3B,GAAAmB,EAAAQ,EACAP,GAAAG,SAAAI,GAAA,WAA6C,MAAA3B,OJgFvC,SAAUA,EAAQC,EAASC,GK9FjC,GAAAe,GAAAC,EACAC,IACAjB,GAAA,IACAe,EAAAf,EAAA,IACAgB,EAAAhB,EAAA,IACAF,EAAAC,QAAAgB,MACAjB,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAK,QACA,IAAAc,GAAA,kBAAApB,GAAAC,QAAAD,EAAAC,QAAAoB,UAAArB,EAAAC,QAAAoB,YAAoHrB,EAAAC,OACpHiB,KACAE,EAAAE,SAAAJ,GAEAE,EAAAG,WAAAH,EAAAG,aACAC,OAAAC,KAAAN,GAAAO,QAAA,SAAAC,GACA,GAAA3B,GAAAmB,EAAAQ,EACAP,GAAAG,SAAAI,GAAA,WAA6C,MAAA3B,OLsGvC,SAAUA,EAAQC,EAASC,GAEhC,YAUA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GARvFoB,OAAOI,eAAe3B,EAAS,cAC3B4B,OAAO,GM3GZ,IAAAC,GAAA5B,EAAA,INgHK6B,EAAa5B,EAAuB2B,EAIxC7B,GAAQK,SACJ0B,KAAM,WACF,OACIC,UACIC,KMnHjB,cNqHiBC,MMnHjB,KNoHiBR,IMnHjB,ONoHiBS,UMnHjB,INqHiBD,MMnHjB,KNoHiBR,IMnHjB,SNqHiBQ,MMnHjB,KNoHiBR,IMnHjB,WNqHiBQ,MMnHjB,KNoHiBR,IMnHjB,WNqHiBQ,MMnHjB,KNoHiBD,KMnHjB,SNoHiBG,UACIH,KMnHrB,UNoHqBI,KMjHrB,SNoHaN,OACIO,GMnHjB,INoHiBC,KMnHjB,ONoHiBC,KMnHjB,QNoHiBC,OMnHjB,KNoHiBC,OMnHjB,aNqHiBJ,GMnHjB,INoHiBC,KMnHjB,ONoHiBC,KMnHjB,QNoHiBC,OMnHjB,KNoHiBC,OMnHjB,WNoHiBC,WACIL,GMnHrB,KNoHqBC,KMnHrB,QNoHqBC,KMnHrB,SNoHqBC,OMnHrB,KNoHqBC,OMnHrB,aNqHqBJ,GMnHrB,KNoHqBC,KMnHrB,QNoHqBC,KMnHrB,SNoHqBC,OMnHrB,KNoHqBC,OMlHrB,eNqHiBJ,GMnHjB,INoHiBC,KMnHjB,ONoHiBC,KMnHjB,QNoHiBC,OMnHjB,KNoHiBC,OMnHjB,aNqHiBJ,GMnHjB,INoHiBC,KMnHjB,ONoHiBC,KMnHjB,QNoHiBC,OMnHjB,KNoHiBC,OMjHjB,eNsHK5B,YMlHL8B,SAAAd,EAAAzB,SNqHKwC,SACIC,SAAU,SAAkBf,EAAMgB,EAAOC,GACrCC,QAAQC,IAAI,SMpHzBnB,GNqHakB,QAAQC,IAAI,QMpHzBH,GNqHaE,QAAQC,IAAI,QMpHzBF,INsHSG,eAAgB,SAAwBC,GACpCH,QAAQC,IAAI,YMpHzBE,INsHSC,UAAW,SAAmB3B,EAAKO,GAC/BgB,QAA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","file":"static/js/app.1d692a180a7283ddb36d.js","sourcesContent":["webpackJsonp([2,0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(5);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(17);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _iview = __webpack_require__(14);\n\t\n\tvar _iview2 = _interopRequireDefault(_iview);\n\t\n\t__webpack_require__(11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_iview2.default);\n\t\n\tnew _vue2.default({\n\t    el: 'body',\n\t    components: { App: _App2.default }\n\t});\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 14 */,\n/* 15 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \" <div id=app> <tree-grid :items=data :columns=columns @on-row-click=rowClick @on-selection-change=selectionClick @on-sort-change=sortClick></tree-grid> </div> \";\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \" <table class=\\\"table table-bordered\\\" id=hl-tree-table> <thead> <tr> <th v-for=\\\"(index, column) in cloneColumns\\\"> <checkbox :checked.sync=checks @click.prevent=handleCheckAll v-if=\\\"column.type === 'selection'\\\"></checkbox> <label v-else> {{{ renderHeader(column, $index) }}} <span class=ivu-table-sort v-if=column.sortable> <icon type=arrow-up-b :class=\\\"{on: column._sortType === 'asc'}\\\" @click=\\\"handleSort($index, 'asc')\\\"></icon> <icon type=arrow-down-b :class=\\\"{on: column._sortType === 'desc'}\\\" @click=\\\"handleSort($index, 'desc')\\\"></icon> </span> </label> </th> </tr> </thead> <tbody> <tr v-for=\\\"(index, item) in initItems\\\" v-show=show(item) :class=\\\"{'child-tr':item.parent}\\\"> <td v-for=\\\"column in columns\\\"> <checkbox-group :model.sync=checkGroup @on-change=checkAllGroupChange v-if=\\\"column.type === 'selection'\\\"> <checkbox :value=item.id><span style=display:none>&nbsp;</span></checkbox> </checkbox-group> <div v-if=\\\"column.type === 'action'\\\"> <i-button :type=action.type size=small @click=RowClick(item,index,$event) v-for=\\\"action in column.actions\\\">{{action.text}}</i-button> </div> <label @click=toggle(index,item) v-if=!column.type> <span v-if=\\\"$index==1\\\"> <i v-if=\\\"item.children&&item.children.length>0\\\" class=ivu-icon :class=\\\"{'ivu-icon-plus-circled':!item.expanded,'ivu-icon-minus-circled':item.expanded }\\\"></i> <i v-else class=ms-tree-space></i> {{{item.spaceHtml}}} </span> {{{renderBody(item,column) }}} </label> </td> </tr> </tbody> </table> \";\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__webpack_require__(12)\n\t__vue_script__ = __webpack_require__(19)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__webpack_require__(13)\n\t__vue_script__ = __webpack_require__(20)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _TreeGrid = __webpack_require__(18);\n\t\n\tvar _TreeGrid2 = _interopRequireDefault(_TreeGrid);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    data: function data() {\n\t        return {\n\t            columns: [{\n\t                type: 'selection'\n\t            }, {\n\t                title: '编码',\n\t                key: 'code',\n\t                sortable: true\n\t            }, {\n\t                title: '名称',\n\t                key: 'name'\n\t            }, {\n\t                title: '状态',\n\t                key: 'status'\n\t            }, {\n\t                title: '备注',\n\t                key: 'remark'\n\t            }, {\n\t                title: '操作',\n\t                type: 'action',\n\t                actions: [{\n\t                    type: 'primary',\n\t                    text: '编辑'\n\t                }]\n\t            }],\n\t            data: [{\n\t                id: '1',\n\t                code: '0001',\n\t                name: '测试数据1',\n\t                status: '启用',\n\t                remark: '测试数据测试数据'\n\t            }, {\n\t                id: '2',\n\t                code: '0002',\n\t                name: '测试数据2',\n\t                status: '启用',\n\t                remark: '测试数据测试数据',\n\t                children: [{\n\t                    id: '01',\n\t                    code: '00001',\n\t                    name: '测试数据01',\n\t                    status: '启用',\n\t                    remark: '测试数据测试数据'\n\t                }, {\n\t                    id: '02',\n\t                    code: '00002',\n\t                    name: '测试数据02',\n\t                    status: '启用',\n\t                    remark: '测试数据测试数据'\n\t                }]\n\t            }, {\n\t                id: '3',\n\t                code: '0003',\n\t                name: '测试数据3',\n\t                status: '启用',\n\t                remark: '测试数据测试数据'\n\t            }, {\n\t                id: '4',\n\t                code: '0004',\n\t                name: '测试数据4',\n\t                status: '启用',\n\t                remark: '测试数据测试数据'\n\t            }]\n\t        };\n\t    },\n\t\n\t    components: {\n\t        TreeGrid: _TreeGrid2.default\n\t    },\n\t    methods: {\n\t        rowClick: function rowClick(data, index, event) {\n\t            console.log('当前行数据:' + data);\n\t            console.log('点击行号:' + index);\n\t            console.log('点击事件:' + event);\n\t        },\n\t        selectionClick: function selectionClick(arr) {\n\t            console.log('选中数据id数组:' + arr);\n\t        },\n\t        sortClick: function sortClick(key, type) {\n\t            console.log('排序字段:' + key);\n\t            console.log('排序规则:' + type);\n\t        }\n\t    }\n\t};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _assign = __webpack_require__(21);\n\t\n\tvar _assign2 = _interopRequireDefault(_assign);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    name: 'treeGrid',\n\t    props: {\n\t        columns: Array,\n\t        items: Array\n\t    },\n\t    data: function data() {\n\t        return {\n\t            initItems: [],\n\t            cloneColumns: [],\n\t            checkGroup: [],\n\t            checks: false };\n\t    },\n\t\n\t    watch: {\n\t        items: function items() {\n\t            if (this.items) {\n\t                this.checks = false;\n\t                this.initData(this.items, 1, null);\n\t            }\n\t        },\n\t\n\t        columns: {\n\t            handler: function handler() {\n\t                this.cloneColumns = this.makeColumns();\n\t            },\n\t\n\t            deep: true\n\t        }\n\t    },\n\t    ready: function ready() {\n\t        if (this.items) {\n\t            this.initData(this.items, 1, null);\n\t            this.cloneColumns = this.makeColumns();\n\t        }\n\t    },\n\t\n\t    methods: {\n\t        handleSort: function handleSort(index, type) {\n\t            this.cloneColumns.forEach(function (col) {\n\t                return col._sortType = 'normal';\n\t            });\n\t            if (this.cloneColumns[index]._sortType === type) {\n\t                this.cloneColumns[index]._sortType = 'normal';\n\t            } else {\n\t                this.cloneColumns[index]._sortType = type;\n\t            }\n\t            this.$emit('on-sort-change', this.cloneColumns[index]['key'], this.cloneColumns[index]['_sortType']);\n\t        },\n\t        RowClick: function RowClick(data, event, index) {\n\t            this.$emit('on-row-click', data, event, index);\n\t        },\n\t        makeColumns: function makeColumns() {\n\t            var columns = this.deepCopy(this.columns);\n\t\n\t            columns.forEach(function (column, index) {\n\t                column._index = index;\n\t                column._width = column.width ? column.width : '';\n\t                column._sortType = 'normal';\n\t            });\n\t            return columns;\n\t        },\n\t        initData: function initData(items, level, parent) {\n\t            var _this = this;\n\t\n\t            this.initItems = [];\n\t            var spaceHtml = \"\";\n\t            for (var i = 1; i < level; i++) {\n\t                spaceHtml += \"<i class='ms-tree-space'></i>\";\n\t            }\n\t            items.forEach(function (item, index) {\n\t                item = (0, _assign2.default)({}, item, {\n\t                    \"parent\": parent,\n\t                    \"level\": level,\n\t                    \"spaceHtml\": spaceHtml\n\t                });\n\t                if (typeof item.expanded == \"undefined\") {\n\t                    item = (0, _assign2.default)({}, item, {\n\t                        \"expanded\": false\n\t                    });\n\t                }\n\t                if (typeof item.show == \"undefined\") {\n\t                    item = (0, _assign2.default)({}, item, {\n\t                        \"isShow\": false\n\t                    });\n\t                }\n\t                item = (0, _assign2.default)({}, item, {\n\t                    \"load\": item.expanded ? true : false\n\t                });\n\t                _this.initItems.push(item);\n\t                if (item.children && item.expanded) {\n\t                    _this.initData(item.children, level + 1, item);\n\t                }\n\t            });\n\t        },\n\t        show: function show(item) {\n\t            return item.level == 1 || item.parent && item.parent.expanded && item.isShow;\n\t        },\n\t        toggle: function toggle(index, item) {\n\t            var _this2 = this;\n\t\n\t            var level = item.level + 1;\n\t            var spaceHtml = \"\";\n\t            for (var i = 1; i < level; i++) {\n\t                spaceHtml += \"<i class='ms-tree-space'></i>\";\n\t            }\n\t            if (item.children) {\n\t                if (item.expanded) {\n\t                    item.expanded = !item.expanded;\n\t                    this.close(index, item);\n\t                } else {\n\t                    item.expanded = !item.expanded;\n\t                    if (item.load) {\n\t                        this.open(index, item);\n\t                    } else {\n\t                        item.load = true;\n\t                        item.children.forEach(function (child, childIndex) {\n\t                            _this2.initItems.splice(index + childIndex + 1, 0, child);\n\t                            _this2.initItems[index + childIndex + 1] = (0, _assign2.default)({}, _this2.initItems[index + childIndex + 1], {\n\t                                'parent': item,\n\t                                'level': level,\n\t                                'spaceHtml': spaceHtml,\n\t                                'isShow': true,\n\t                                'expanded': false\n\t                            });\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        open: function open(index, item) {\n\t            var _this3 = this;\n\t\n\t            if (item.children) {\n\t                item.children.forEach(function (child, childIndex) {\n\t                    child.isShow = true;\n\t                    if (child.children) {\n\t                        _this3.open(index + childIndex + 1, child.children);\n\t                    }\n\t                });\n\t            }\n\t        },\n\t        close: function close(index, item) {\n\t            var _this4 = this;\n\t\n\t            if (item.children) {\n\t                item.children.forEach(function (child, childIndex) {\n\t                    child.isShow = false;\n\t                    if (child.children) {\n\t                        _this4.close(index + childIndex + 1, child.children);\n\t                    }\n\t                });\n\t            }\n\t        },\n\t        handleCheckAll: function handleCheckAll() {\n\t            this.checks = !this.checks;\n\t            if (this.checks) {\n\t                this.checkGroup = this.checkGroup.concat(this.All(this.items));\n\t            } else {\n\t                this.checkGroup = [];\n\t            }\n\t            this.$emit('on-selection-change', this.checkGroup);\n\t        },\n\t        checkAllGroupChange: function checkAllGroupChange(data) {\n\t            if (data.length === this.items.length) {\n\t                this.checks = true;\n\t            } else {\n\t                this.checks = false;\n\t            }\n\t            this.$emit('on-selection-change', this.checkGroup);\n\t        },\n\t        All: function All(data) {\n\t            var _this5 = this;\n\t\n\t            var arr = [];\n\t            data.forEach(function (item) {\n\t                arr.push(item.id);\n\t                if (item.children && item.children.length > 0) {\n\t                    arr = arr.concat(_this5.All(item.children));\n\t                }\n\t            });\n\t            return arr;\n\t        },\n\t        renderHeader: function renderHeader(column, $index) {\n\t            if ('renderHeader' in this.columns[$index]) {\n\t                return this.columns[$index].renderHeader(column, $index);\n\t            } else {\n\t                return column.title || '#';\n\t            }\n\t        },\n\t        renderBody: function renderBody(row, column, index) {\n\t            return row[column.key];\n\t        },\n\t        deepCopy: function deepCopy(data) {\n\t            var t = this.type(data),\n\t                o,\n\t                i,\n\t                ni;\n\t            if (t === 'array') {\n\t                o = [];\n\t            } else if (t === 'object') {\n\t                o = {};\n\t            } else {\n\t                return data;\n\t            }\n\t            if (t === 'array') {\n\t                for (i = 0, ni = data.length; i < ni; i++) {\n\t                    o.push(this.deepCopy(data[i]));\n\t                }\n\t                return o;\n\t            } else if (t === 'object') {\n\t                for (i in data) {\n\t                    o[i] = this.deepCopy(data[i]);\n\t                }\n\t                return o;\n\t            }\n\t        },\n\t        type: function type(obj) {\n\t            var toString = Object.prototype.toString;\n\t            var map = {\n\t                '[object Boolean]': 'boolean',\n\t                '[object Number]': 'number',\n\t                '[object String]': 'string',\n\t                '[object Function]': 'function',\n\t                '[object Array]': 'array',\n\t                '[object Date]': 'date',\n\t                '[object RegExp]': 'regExp',\n\t                '[object Undefined]': 'undefined',\n\t                '[object Null]': 'null',\n\t                '[object Object]': 'object'\n\t            };\n\t            return map[toString.call(obj)];\n\t        }\n\t    }\n\t};\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.1d692a180a7283ddb36d.js","import Vue from 'vue'\nimport App from './App'\nimport iView from 'iview';\nimport 'iview/dist/styles/iview.css';\n\nVue.use(iView);\n/* eslint-disable no-new */\nnew Vue({\n    el: 'body',\n    components: { App }\n})\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = \" <div id=app> <tree-grid :items=data :columns=columns @on-row-click=rowClick @on-selection-change=selectionClick @on-sort-change=sortClick></tree-grid> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.1.2.4@vue-html-loader!./~/.8.7.0@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 15\n// module chunks = 2","module.exports = \" <table class=\\\"table table-bordered\\\" id=hl-tree-table> <thead> <tr> <th v-for=\\\"(index, column) in cloneColumns\\\"> <checkbox :checked.sync=checks @click.prevent=handleCheckAll v-if=\\\"column.type === 'selection'\\\"></checkbox> <label v-else> {{{ renderHeader(column, $index) }}} <span class=ivu-table-sort v-if=column.sortable> <icon type=arrow-up-b :class=\\\"{on: column._sortType === 'asc'}\\\" @click=\\\"handleSort($index, 'asc')\\\"></icon> <icon type=arrow-down-b :class=\\\"{on: column._sortType === 'desc'}\\\" @click=\\\"handleSort($index, 'desc')\\\"></icon> </span> </label> </th> </tr> </thead> <tbody> <tr v-for=\\\"(index, item) in initItems\\\" v-show=show(item) :class=\\\"{'child-tr':item.parent}\\\"> <td v-for=\\\"column in columns\\\"> <checkbox-group :model.sync=checkGroup @on-change=checkAllGroupChange v-if=\\\"column.type === 'selection'\\\"> <checkbox :value=item.id><span style=display:none>&nbsp;</span></checkbox> </checkbox-group> <div v-if=\\\"column.type === 'action'\\\"> <i-button :type=action.type size=small @click=RowClick(item,index,$event) v-for=\\\"action in column.actions\\\">{{action.text}}</i-button> </div> <label @click=toggle(index,item) v-if=!column.type> <span v-if=\\\"$index==1\\\"> <i v-if=\\\"item.children&&item.children.length>0\\\" class=ivu-icon :class=\\\"{'ivu-icon-plus-circled':!item.expanded,'ivu-icon-minus-circled':item.expanded }\\\"></i> <i v-else class=ms-tree-space></i> {{{item.spaceHtml}}} </span> {{{renderBody(item,column) }}} </label> </td> </tr> </tbody> </table> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.1.2.4@vue-html-loader!./~/.8.7.0@vue-loader/lib/selector.js?type=template&index=0!./src/components/TreeGrid.vue\n// module id = 16\n// module chunks = 2","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\nrequire(\"!!../node_modules/.1.0.1@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../node_modules/.8.7.0@vue-loader/lib/style-rewriter.js!../node_modules/.8.7.0@vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!../node_modules/.8.7.0@vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!../node_modules/.8.7.0@vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 17\n// module chunks = 2","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\nrequire(\"!!../../node_modules/.1.0.1@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/.8.7.0@vue-loader/lib/style-rewriter.js!../../node_modules/.8.7.0@vue-loader/lib/selector.js?type=style&index=0!./TreeGrid.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!../../node_modules/.8.7.0@vue-loader/lib/selector.js?type=script&index=0!./TreeGrid.vue\")\n__vue_template__ = require(\"!!vue-html-loader!../../node_modules/.8.7.0@vue-loader/lib/selector.js?type=template&index=0!./TreeGrid.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/TreeGrid.vue\n// module id = 18\n// module chunks = 2","<template>\n  <div id=\"app\">\n      <tree-grid \n        :items='data' \n        :columns='columns'\n        @on-row-click='rowClick'\n        @on-selection-change='selectionClick'\n        @on-sort-change='sortClick'\n      ></tree-grid>\n  </div>\n</template>\n\n<script>\n    import TreeGrid from './components/TreeGrid'\n    export default {\n        data() {\n            return {\n                columns: [{\n                    type: 'selection'\n                }, {\n                    title: '编码',\n                    key: 'code',\n                    sortable: true\n                }, {\n                    title: '名称',\n                    key: 'name'\n                }, {\n                    title: '状态',\n                    key: 'status'\n                }, {\n                    title: '备注',\n                    key: 'remark'\n                }, {\n                    title: '操作',\n                    type: 'action',\n                    actions: [{\n                        type: 'primary',\n                        text: '编辑'\n                    }]\n                }],\n                data: [{\n                    id: '1',\n                    code: '0001',\n                    name: '测试数据1',\n                    status: '启用',\n                    remark: '测试数据测试数据'\n                }, {\n                    id: '2',\n                    code: '0002',\n                    name: '测试数据2',\n                    status: '启用',\n                    remark: '测试数据测试数据',\n                    children: [{\n                        id: '01',\n                        code: '00001',\n                        name: '测试数据01',\n                        status: '启用',\n                        remark: '测试数据测试数据',\n                    }, {\n                        id: '02',\n                        code: '00002',\n                        name: '测试数据02',\n                        status: '启用',\n                        remark: '测试数据测试数据',\n                    }]\n                }, {\n                    id: '3',\n                    code: '0003',\n                    name: '测试数据3',\n                    status: '启用',\n                    remark: '测试数据测试数据'\n                }, {\n                    id: '4',\n                    code: '0004',\n                    name: '测试数据4',\n                    status: '启用',\n                    remark: '测试数据测试数据'\n                }]\n            }\n        },\n        components: {\n            TreeGrid\n        },\n        methods: {\n            rowClick(data, index, event) {\n                console.log('当前行数据:' + data)\n                console.log('点击行号:' + index)\n                console.log('点击事件:' + event)\n            },\n            selectionClick(arr) {\n                console.log('选中数据id数组:' + arr)\n            },\n            sortClick(key, type) {\n                console.log('排序字段:' + key)\n                console.log('排序规则:' + type)\n            }\n        }\n    }\n</script>\n\n<style>\n    html {\n        height: 100%;\n    }\n    \n    body {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n    }\n    \n    #app {\n        color: #2c3e50;\n        margin-top: -100px;\n        max-width: 600px;\n        font-family: Source Sans Pro, Helvetica, sans-serif;\n        text-align: center;\n    }\n    \n    #app a {\n        color: #42b983;\n        text-decoration: none;\n    }\n    \n    .logo {\n        width: 100px;\n        height: 100px\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// App.vue?705112d6","<!--\n * @Author: 黄龙 \n * @pageName: 'tree-grid  树型表格' \n * @Date: 2017-07-17 16:48:44 \n * @Last Modified by:   黄龙 \n * @Last Modified time: 2017-07-17 16:48:44 \n * @events  @on-row-click 单击行或者单击操作按钮方法 返回当前行数据,$event,index\n            @on-selection-change  多选模式下 选中项变化时触发  返回选中数组\n            @on-sort-change  排序时有效，当点击排序时触发 返回key和排序规则\n   @props   items 显示的结构化数据\n            columns 表格列的配置描述 sortable:true 开启排序功能 \n            type: 'selection'为多选功能 type: 'action' 为操作功能 actions:[{}] 操作按钮\n -->\n<template>\n<table class=\"table table-bordered\" id='hl-tree-table'>\n    <thead>\n        <tr>\n            <th v-for=\"(index, column) in cloneColumns\">\n                <Checkbox :checked.sync=\"checks\" @click.prevent=\"handleCheckAll\" v-if=\"column.type === 'selection'\"></Checkbox>\n                <label v-else>\n                    {{{ renderHeader(column, $index) }}}\n                    <span class=\"ivu-table-sort\" v-if=\"column.sortable\">\n                        <Icon type=\"arrow-up-b\" :class=\"{on: column._sortType === 'asc'}\" @click=\"handleSort($index, 'asc')\"></Icon>\n                         <Icon type=\"arrow-down-b\" :class=\"{on: column._sortType === 'desc'}\" @click=\"handleSort($index, 'desc')\"></Icon>\n                    </span>\n                </label>\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"(index, item) in initItems\" v-show=\"show(item)\" :class=\"{'child-tr':item.parent}\" >\n            <td v-for=\"column in columns\">\n                <Checkbox-group :model.sync=\"checkGroup\" @on-change=\"checkAllGroupChange\" v-if=\"column.type === 'selection'\">\n                    <Checkbox :value=\"item.id\"><span style=\"display:none;\">&nbsp;</span></Checkbox>\n                </Checkbox-group>\n                <div v-if=\"column.type === 'action'\">\n                    <i-button :type=\"action.type\" size=\"small\" @click=\"RowClick(item,index,$event)\" v-for='action in column.actions'>{{action.text}}</i-button>\n                </div>\n                <label @click=\"toggle(index,item)\" v-if=\"!column.type\">\n                    <span v-if='$index==1'>\n                        <i v-if=\"item.children&&item.children.length>0\" class=\"ivu-icon\" :class=\"{'ivu-icon-plus-circled':!item.expanded,'ivu-icon-minus-circled':item.expanded }\"></i>\n                        <i v-else class=\"ms-tree-space\"></i>\n                        {{{item.spaceHtml}}} \n                    </span> {{{renderBody(item,column) }}}\n                </label>\n            </td>\n        </tr>\n    </tbody>\n</table>\n</template>\n<script>\n    export default {\n        name: 'treeGrid',\n        props: {\n            columns: Array,\n            items: Array,\n        },\n        data() {\n            return {\n                initItems: [], //处理后数据数组\n                cloneColumns: [], //处理后的表头数据\n                checkGroup: [], //复选框数组\n                checks: false, //全选\n            }\n        },\n        watch: {\n            items() {\n                if (this.items) {\n                    this.checks = false;\n                    this.initData(this.items, 1, null);\n                }\n            },\n            columns: {\n                handler() {\n                    this.cloneColumns = this.makeColumns();\n                },\n                deep: true\n            },\n        },\n        ready() {\n            if (this.items) {\n                this.initData(this.items, 1, null);\n                this.cloneColumns = this.makeColumns();\n            }\n        },\n        methods: {\n            // 排序事件\n            handleSort(index, type) {\n                this.cloneColumns.forEach((col) => col._sortType = 'normal');\n                if (this.cloneColumns[index]._sortType === type) {\n                    this.cloneColumns[index]._sortType = 'normal'\n                } else {\n                    this.cloneColumns[index]._sortType = type\n                }\n                this.$emit('on-sort-change', this.cloneColumns[index]['key'], this.cloneColumns[index]['_sortType'])\n            },\n            // 点击某一行事件\n            RowClick(data, event, index) {\n                this.$emit('on-row-click', data, event, index)\n            },\n            // 处理表头数据\n            makeColumns() {\n                let columns = this.deepCopy(this.columns);\n\n                columns.forEach((column, index) => {\n                    column._index = index;\n                    column._width = column.width ? column.width : '';\n                    column._sortType = 'normal';\n\n                });\n                return columns;\n            },\n            // 数据处理 增加自定义属性监听\n            initData(items, level, parent) {\n                this.initItems = []\n                let spaceHtml = \"\";\n                for (var i = 1; i < level; i++) {\n                    spaceHtml += \"<i class='ms-tree-space'></i>\"\n                }\n                items.forEach((item, index) => {\n                    item = Object.assign({}, item, {\n                        \"parent\": parent,\n                        \"level\": level,\n                        \"spaceHtml\": spaceHtml\n                    });\n                    if ((typeof item.expanded) == \"undefined\") {\n                        item = Object.assign({}, item, {\n                            \"expanded\": false\n                        });\n                    }\n                    if ((typeof item.show) == \"undefined\") {\n                        item = Object.assign({}, item, {\n                            \"isShow\": false\n                        });\n                    }\n                    item = Object.assign({}, item, {\n                        \"load\": (item.expanded ? true : false)\n                    });\n                    this.initItems.push(item);\n                    if (item.children && item.expanded) {\n                        this.initData(item.children, level + 1, item);\n                    }\n                })\n            },\n            //  隐藏显示\n            show(item) {\n                return ((item.level == 1) || (item.parent && item.parent.expanded && item.isShow));\n            },\n            toggle(index, item) {\n                let level = item.level + 1;\n                let spaceHtml = \"\";\n                for (var i = 1; i < level; i++) {\n                    spaceHtml += \"<i class='ms-tree-space'></i>\"\n                }\n                if (item.children) {\n                    if (item.expanded) {\n                        item.expanded = !item.expanded;\n                        this.close(index, item);\n                    } else {\n                        item.expanded = !item.expanded;\n                        if (item.load) {\n                            this.open(index, item);\n                        } else {\n                            item.load = true;\n                            item.children.forEach((child, childIndex) => {\n                                this.initItems.splice((index + childIndex + 1), 0, child);\n                                this.initItems[index + childIndex + 1] = Object.assign({}, this.initItems[index + childIndex + 1], {\n                                    'parent': item,\n                                    'level': level,\n                                    'spaceHtml': spaceHtml,\n                                    'isShow': true,\n                                    'expanded': false\n                                })\n                            })\n                        }\n                    }\n                }\n            },\n            open(index, item) {\n                if (item.children) {\n                    item.children.forEach((child, childIndex) => {\n                        child.isShow = true;\n                        if (child.children) {\n                            this.open(index + childIndex + 1, child.children);\n                        }\n                    })\n                }\n            },\n            close(index, item) {\n                if (item.children) {\n                    item.children.forEach((child, childIndex) => {\n                        child.isShow = false;\n                        if (child.children) {\n                            this.close(index + childIndex + 1, child.children);\n                        }\n                    })\n                }\n            },\n            //checkbox 全选 选择事件\n            handleCheckAll() {\n                this.checks = !this.checks;\n                if (this.checks) {\n                    this.checkGroup = this.checkGroup.concat(this.All(this.items));\n                } else {\n                    this.checkGroup = []\n                }\n                this.$emit('on-selection-change', this.checkGroup)\n            },\n            checkAllGroupChange(data) {\n                if (data.length === this.items.length) {\n                    this.checks = true;\n                } else {\n                    this.checks = false;\n                }\n                this.$emit('on-selection-change', this.checkGroup)\n            },\n            All(data) {\n                let arr = []\n                data.forEach((item) => {\n                    arr.push(item.id)\n                    if (item.children && item.children.length > 0) {\n                        arr = arr.concat(this.All(item.children));\n                    }\n                })\n                return arr\n            },\n            // 返回表头\n            renderHeader(column, $index) {\n                if ('renderHeader' in this.columns[$index]) {\n                    return this.columns[$index].renderHeader(column, $index);\n                } else {\n                    return column.title || '#';\n                }\n            },\n\n            // 返回内容\n            renderBody(row, column, index) {\n                return row[column.key]\n            },\n            deepCopy(data) {\n                var t = this.type(data),\n                    o, i, ni;\n                if (t === 'array') {\n                    o = [];\n                } else if (t === 'object') {\n                    o = {};\n                } else {\n                    return data;\n                }\n                if (t === 'array') {\n                    for (i = 0, ni = data.length; i < ni; i++) {\n                        o.push(this.deepCopy(data[i]));\n                    }\n                    return o;\n                } else if (t === 'object') {\n                    for (i in data) {\n                        o[i] = this.deepCopy(data[i]);\n                    }\n                    return o;\n                }\n\n            },\n            type(obj) {\n                var toString = Object.prototype.toString;\n                var map = {\n                    '[object Boolean]': 'boolean',\n                    '[object Number]': 'number',\n                    '[object String]': 'string',\n                    '[object Function]': 'function',\n                    '[object Array]': 'array',\n                    '[object Date]': 'date',\n                    '[object RegExp]': 'regExp',\n                    '[object Undefined]': 'undefined',\n                    '[object Null]': 'null',\n                    '[object Object]': 'object'\n                };\n                return map[toString.call(obj)];\n            }\n        },\n    }\n</script>\n<style>\n    table {\n        border-spacing: 0;\n        border-collapse: collapse;\n    }\n    \n    .table-bordered {\n        border: 1px solid #EBEBEB;\n    }\n    \n    .table>tbody>tr>td,\n    .table>tbody>tr>th,\n    .table>thead>tr>td,\n    .table>thead>tr>th {\n        border-top: 1px solid #e7eaec;\n        line-height: 1.42857;\n        padding: 8px;\n        vertical-align: middle;\n    }\n    \n    .table-bordered>tbody>tr>td,\n    .table-bordered>tbody>tr>th,\n    .table-bordered>tfoot>tr>td,\n    .table-bordered>tfoot>tr>th,\n    .table-bordered>thead>tr>td,\n    .table-bordered>thead>tr>th {\n        border: 1px solid #e7e7e7;\n    }\n    \n    .table>thead>tr>th {\n        border-bottom: 1px solid #DDD;\n    }\n    \n    .table-bordered>thead>tr>td,\n    .table-bordered>thead>tr>th {\n        background-color: #F5F5F6;\n    }\n    \n    #hl-tree-table>tbody>tr {\n        background-color: #fbfbfb;\n    }\n    \n    #hl-tree-table>tbody>.child-tr {\n        background-color: #fff;\n    }\n    \n    label {\n        margin: 0 8px;\n    }\n    \n    .ms-tree-space {\n        position: relative;\n        top: 1px;\n        display: inline-block;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 1;\n        width: 14px;\n        height: 14px;\n    }\n    \n    .ms-tree-space::before {\n        content: \"\"\n    }\n    \n    #hl-tree-table th>label {\n        margin: 0;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// TreeGrid.vue?55ee565a"],"sourceRoot":""}